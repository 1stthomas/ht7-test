name: PHPUnit
run-name: Reduced lint and tests

on:
  push:
    branches-ignore: [ master, develop ]

jobs:
  Lint-Basics:
    name: Lint Basics
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: GitHub Action Lint
        uses: devops-actions/actionlint@v0.1.2
      - name: XML Lint
        uses: action-pack/valid-xml@v1
        with:
          path: "."
          file-endings: ".xml"
      - name: Markdown Lint
        run: docker run --volume "$PWD:/workdir" ghcr.io/igorshubovych/markdownlint-cli:latest "**/*.md"
      - name: PHP syntax check
        run: find . -name '*.php' -exec php -l {} \;
      - name: PHP Composer Lint
        run: "composer validate --strict"

  phpunit:
    name: PHPUnit
    env:
      CODE_COVERAGE: none
      LC_ALL: en_US.UTF-8
      PHP_EXTENSIONS: mbstring, xml, ctype, iconv
      PHP_TOOLS: "composer:v2"
      PHP_VERSION: "8.4"
    needs: [Lint-Basics]
    runs-on: "ubuntu-22.04"
    steps:
      - name: Checkout ${{ github.repository }}
        uses: "actions/checkout@v4"

      - name: Setup PHP ${{ env.PHP_VERSION }}
        uses: shivammathur/setup-php@v2
        with:
          extensions: ${{ env.PHP_EXTENSIONS }}
          php-version: ${{ env.PHP_VERSION }}
          tools: composer:v2
          
      - name: Restore cached dependencies
        id: restore-cache
        uses: actions/cache/restore@v4
        with:
          key: ${{ runner.os }}-${{ env.PHP_VERSION }}-composer-${{ hashFiles('**/composer.lock') }}
          path: |
            ./vendor

      - name: Install dependencies
        # if: steps.restore-cache.outputs.cache-hit != 'true'
        run: composer install --no-interaction --no-progress

      - name: Cache Composer dependencies
        id: cache-composer-dependencies
        if: always() && steps.restore-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-cache.outputs.cache-primary-key }}
          path: ./vendor

      - name: Perform unit tests
        run: |
          ./vendor/bin/phpunit --configuration ./phpunit.xml --log-junit phpunit-report.xml --testsuite Unit
  
      # - name: Run unit test
      #   uses: php-actions/phpunit@v3
      #   with:
      #     args: "--log-junit phpunit-report.xml"
      #     configuration: phpunit.xml
      #     php_extensions: ${{ env.PHP_EXTENSIONS }}
      #     php_version: ${{ env.PHP_VERSION }}
      #     memory_limit: 1G
      #     testsuite: unit
      #     version: latest

  Security:
    name: Security
    needs: [phpunit]
    runs-on: "ubuntu-22.04"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        id: cache-db
        with:
            path: ~/.symfony/cache
            key: db
      - uses: symfonycorp/security-checker-action@v5
      - run: |
          ls -la
