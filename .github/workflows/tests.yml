name: "PHPUnit"

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  phpunit:
    name: "PHPUnit"
    continue-on-error: ${{ matrix.php-version == '8.3' }}
    env:
      CODE_COVERAGE: none
      LC_ALL: en_US.UTF-8
      PHP_EXTENSIONS: mbstring, xml, ctype, iconv
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        php-version:
          - "8.2"
          - "8.3"
          - "8.4"
        dependencies:
          - "locked"
        operating-system:
          - "ubuntu-24.04"
        composer:
          - "composer:v2"
        composer-command:
          - "composer install --no-interaction --no-progress --no-suggest"
        include:
          - name: "PHP 8.3 lowest"
            composer-command: "composer update --prefer-lowest --no-interaction --no-progress --no-suggest"
            dependencies: "lowest"
            operating-system: "ubuntu-24.04"
            php-version: 8.3
          - name: "PHP 8.3 highest"
            composer-command: "composer update --no-interaction --no-progress --no-suggest"
            dependencies: "highest"
            operating-system: "ubuntu-24.04"
            php-version: 8.3

    steps:
      - name: Enable code coverage and test reporting
        if: matrix.php-version == '8.3' && startsWith(matrix.operating-system, 'ubuntu') && matrix.dependencies == 'locked'
        run: printf 'CODE_COVERAGE=pcov\n' >> "$GITHUB_ENV"

      - name: "Checkout"
        uses: "actions/checkout@v4"

      - name: "Install PHP"
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          coverage: ${{ env.CODE_COVERAGE }}
          tools: ${{ matrix.composer }}

      - name: "Install dependencies"
        run: |
          ${{ matrix.composer-command }}

      - name: "Perform unit tests"
        if: env.CODE_COVERAGE == 'none'
        run: composer test-unit

      - name: "Perform unit tests with test report"
        if: env.CODE_COVERAGE != 'none'
        run: |
          ./vendor/bin/phpunit --configuration ./phpunit.xml --log-junit phpunit-report.xml --log-teamcity phpunit-report-teamcity.xml --testsuite Unit
          ls -la
          cat phpunit-report.xml

      - name: Test Summary
        if: env.CODE_COVERAGE != 'none'
        uses: test-summary/action@v2
        with:
          paths: phpunit-report*.xml

      - name: "Perform unit tests with coverage"
        if: env.CODE_COVERAGE != 'none'
        run: |
          php ./vendor/bin/phpunit --configuration ./tests/phpunit-cc.xml --coverage-clover=clover.xml --testsuite Unit

      - name: Make code coverage badge
        if: env.CODE_COVERAGE != 'none'
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          coverage_badge_path: .build/images/badge-coverage.svg
          push_badge: true
          repo_token: ${{ secrets.GITHUB_TOKEN }}
        
      # - name: Git push to image-data branch
      #   if: env.CODE_COVERAGE != 'none' && github.event_name == 'pull_request'
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     publish_dir: ./output
      #     publish_branch: image-data
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     user_name: 'github-actions[bot]'
      #     user_email: 'github-actions[bot]@users.noreply.github.com'
